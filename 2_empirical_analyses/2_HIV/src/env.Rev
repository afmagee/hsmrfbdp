# Initialize move/monitor counters
mvi = 0
mni = 0

# Get the sequence data
env_data = readDiscreteCharacterData("2_HIV/data/env_subtA.fas")

# Important counts
taxa_env = readTaxonData("2_HIV/data/env_subtA_taxa.txt",delimiter=" ")
num_taxa_env = env_data.ntaxa()
num_branches_env = 2 * num_taxa_env - 2

# Choose a tree model
source("2_HIV/src/" + TREEMODEL + ".Rev")

# Load clock model
source("2_HIV/src/clock_model.Rev")

# Load substitution model
source("2_HIV/src/substitution_model.Rev")

my_model = model(gamma_birth_rate)

# Set up monitors
monitors[++mni] = mnModel(filename="output/HIV_env_" + TREEMODEL + "_" + REPLICATE + ".log",printgen=100, separator = TAB)
monitors[++mni] = mnFile(filename="output/HIV_env_" + TREEMODEL + "_" + REPLICATE + ".trees",printgen=100, separator = TAB, psi_env)

monitors[++mni] = mnScreen(printgen=100)
my_mcmc = mcmc(my_model,monitors,moves)

# Run analyses
my_mcmc.burnin(1000,50)
my_mcmc.operatorSummary()
my_mcmc.run(500000)
my_mcmc.operatorSummary()

q()
